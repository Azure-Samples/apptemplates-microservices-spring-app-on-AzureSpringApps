<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.5.1</version>
	</parent>

	<groupId>org.springframework.samples</groupId>
	<artifactId>spring-petclinic-microservices</artifactId>
	<version>2.5.1</version>
	<name>${project.artifactId}</name>
	<packaging>pom</packaging>

	<modules>
		<module>spring-petclinic-admin-server</module>
		<module>spring-petclinic-customers-service</module>
		<module>spring-petclinic-vets-service</module>
		<module>spring-petclinic-visits-service</module>
		<module>spring-petclinic-config-server</module>
		<module>spring-petclinic-discovery-server</module>
		<module>spring-petclinic-api-gateway</module>
		<module>spring-petclinic-consumer</module>
	</modules>

	<properties>
		<java.version>11</java.version>
		<assertj.version>3.17.1</assertj.version>

		<spring-boot.version>2.5.1</spring-boot.version>
		<spring-cloud.version>2020.0.3</spring-cloud.version>
		<chaos-monkey-spring-boot.version>2.3.10</chaos-monkey-spring-boot.version>

		<docker.image.prefix>springcommunity</docker.image.prefix>
		<docker.image.exposed.port>9090</docker.image.exposed.port>
		<docker.image.dockerfile.dir>${basedir}</docker.image.dockerfile.dir>
		<docker.image.dockerize.version>v0.6.1</docker.image.dockerize.version>
		<docker.plugin.version>1.2.0</docker.plugin.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>de.codecentric</groupId>
				<artifactId>chaos-monkey-spring-boot</artifactId>
				<version>${chaos-monkey-spring-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.assertj</groupId>
				<artifactId>assertj-core</artifactId>
				<version>${assertj.version}</version>
				<scope>test</scope>
			</dependency>

			<!-- Swagger 2 -->
	        <dependency>
	            <groupId>io.springfox</groupId>
	            <artifactId>springfox-swagger2</artifactId>
	            <version>3.0.0</version>
	        </dependency>
	        <dependency>
	            <groupId>io.springfox</groupId>
	            <artifactId>springfox-boot-starter</artifactId>
	            <version>3.0.0</version>
	        </dependency>
	        <dependency>
	            <groupId>io.springfox</groupId>
	            <artifactId>springfox-swagger-ui</artifactId>
	            <version>2.9.2</version>
	        </dependency>
		</dependencies>
	</dependencyManagement>

	<profiles>
		<profile>
			<id>springboot</id>
			<activation>
				<file>
					<!-- Just a way to identify a Spring Boot application -->
					<exists>src/main/resources/bootstrap.yml</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<fork>true</fork>
							<!-- Layered jars optimizes Docker images -->
							<layers>
								<enabled>true</enabled>
							</layers>
						</configuration>
						<executions>
							<execution>
								<!-- Spring Boot Actuator displays build-related information if a META-INF/build-info.properties file is present -->
								<goals>
									<goal>build-info</goal>
								</goals>
								<configuration>
									<additionalProperties>
										<encoding.source>${project.build.sourceEncoding}</encoding.source>
										<encoding.reporting>${project.reporting.outputEncoding}</encoding.reporting>
										<java.source>${maven.compiler.source}</java.source>
										<java.target>${maven.compiler.target}</java.target>
									</additionalProperties>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<!-- Spring Boot Actuator displays build-related information if a META-INF/build-info.properties file is present -->
					<plugin>
						<groupId>pl.project13.maven</groupId>
						<artifactId>git-commit-id-plugin</artifactId>
						<executions>
							<execution>
								<id>get-the-git-infos</id>
								<goals>
									<goal>revision</goal>
								</goals>
								<phase>package</phase>
							</execution>
					        <execution>
					            <id>validate-the-git-infos</id>
					            <goals>
					                <goal>validateRevision</goal>
					            </goals>
					        </execution>							
						</executions>
						<configuration>
							<verbose>true</verbose>
							<dateFormat>yyyy-MM-dd'T'HH:mm:ssZ</dateFormat>
							<generateGitPropertiesFile>true</generateGitPropertiesFile>
							<generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
							<commitIdGenerationMode>full</commitIdGenerationMode>
							<failOnNoGitDirectory>false</failOnNoGitDirectory>
							<failOnUnableToExtractRepoInfo>false</failOnUnableToExtractRepoInfo>
							<excludeProperties>
								<excludeProperty>^git.local.branch.*$</excludeProperty>
								<excludeProperty>git.user.*</excludeProperty>
							</excludeProperties>
						</configuration>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-enforcer-plugin</artifactId>
						<version>3.0.0</version>
						<executions>
							<execution>
								<id>enforce-versions</id>
								<goals>
									<goal>enforce</goal>
								</goals>
								<configuration>
									<rules>
										<bannedPlugins>
											<!-- will only display a warning but does not fail the build. -->
											<level>WARN</level>
											<excludes>
												<exclude>org.apache.maven.plugins:maven-verifier-plugin</exclude>
											</excludes>
											<message>Please consider using the maven-invoker-plugin (http://maven.apache.org/plugins/maven-invoker-plugin/)!</message>
										</bannedPlugins>
										<requireMavenVersion>
											<version>3.5</version>
										</requireMavenVersion>
										<requireJavaVersion>
											<version>11</version>
										</requireJavaVersion>
										<requireOS>
											<family>unix</family>
										</requireOS>
									</rules>
								</configuration>
							</execution>
						</executions>
					</plugin>

				</plugins>
			</build>
		</profile>

		<profile>
			<id>buildDocker</id>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>com.spotify</groupId>
							<artifactId>docker-maven-plugin</artifactId>
							<version>${docker.plugin.version}</version>
							<executions>
								<execution>
									<phase>install</phase>
									<goals>
										<goal>build</goal>
									</goals>
								</execution>
							</executions>
							<configuration>
								<imageName>${docker.image.prefix}/${project.artifactId}</imageName>
								<dockerDirectory>${docker.image.dockerfile.dir}</dockerDirectory>
								<serverId>docker-hub</serverId>
								<registryUrl>https://index.docker.io/v1/</registryUrl>
								<resources>
									<resource>
										<targetPath>/</targetPath>
										<directory>${project.build.directory}</directory>
										<include>${project.build.finalName}.jar</include>
									</resource>
								</resources>
								<buildArgs>
									<ARTIFACT_NAME>${project.build.finalName}</ARTIFACT_NAME>
									<EXPOSED_PORT>${docker.image.exposed.port}</EXPOSED_PORT>
									<DOCKERIZE_VERSION>${docker.image.dockerize.version}</DOCKERIZE_VERSION>
								</buildArgs>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>

		<profile>
			<id>dev</id>
			<activation>
				<property>
					<name>env</name>
					<value>development</value>
				</property>
			</activation>
		</profile>

		<profile>
			<id>cloud</id>
			<activation>
				<property>
					<name>env</name>
					<value>cloud</value>
				</property>
			</activation>
			<dependencies>
				<!--
                <dependency>
                    <groupId>com.microsoft.azure</groupId>
                    <artifactId>azure-keyvault-secrets-spring-boot-starter</artifactId>
                    <version>2.3.0</version>
                </dependency>
                -->
			</dependencies>
		</profile>

	</profiles>

	<build>
		<plugins>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.7</version>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
				<!--
				<reportSets>
					<reportSet>
						<reports>
							<report>report</report>
						</reports>
					</reportSet>
				</reportSets>
				-->
			</plugin>

			<plugin>
				<groupId>org.owasp</groupId>
				<artifactId>dependency-check-maven</artifactId>
				<version>6.5.3</version>
				<executions>
					<execution>
						<id>owasp-check</id>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<failBuildOnCVSS>8</failBuildOnCVSS>
				</configuration>
			</plugin>

			<plugin>
				<!--com.github.spotbugs:spotbugs-maven-plugin:3.1.7:spotbugs-->
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
				<version>4.5.3.0</version>
				<dependencies>
					<!-- overwrite dependency on spotbugs if you want to specify the version of spotbugs -->
					<dependency>
						<groupId>com.github.spotbugs</groupId>
						<artifactId>spotbugs</artifactId>
						<version>4.5.3</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>spotbugs</id>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<effort>Max</effort>
					<threshold>Low</threshold>
					<!--
	                <includeFilterFile>spotbugs-security-include.xml</includeFilterFile>
	                <excludeFilterFile>spotbugs-security-exclude.xml</excludeFilterFile>
	            	-->
					<plugins>
						<plugin>
							<groupId>com.h3xstream.findsecbugs</groupId>
							<artifactId>findsecbugs-plugin</artifactId>
							<version>1.10.1</version>
						</plugin>
					</plugins>
				</configuration>
			</plugin>

		</plugins>
	</build>

	<reporting>
		<plugins>

			<plugin>
				<groupId>org.owasp</groupId>
				<artifactId>dependency-check-maven</artifactId>
				<version>6.5.3</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>aggregate</report>
                        </reports>
                    </reportSet>
                </reportSets>				
			</plugin>

			<plugin>
				<!--com.github.spotbugs:spotbugs-maven-plugin:3.1.7:spotbugs-->
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
				<version>4.5.3.0</version>
				<configuration>
					<xmlOutput>true</xmlOutput>
					<htmlOutput>true</htmlOutput>
					<xmlOutputDirectory>target/site</xmlOutputDirectory>
					<htmlOutputDirectory>target/site</htmlOutputDirectory>
				</configuration>
			</plugin>

		</plugins>
	</reporting>

</project>